# Only use continuous integration on the master branch
branches:
  only:
    - travis-test


notifications:
  email:
    # Send notifications on every build failure to comitter and author.
    # Never send notifications for sucessful builds.
    on_success: never
  webhooks:
    urls:
    # Gitter
    - secure: "FWx+7+aWMapJfqykkpcBSiaNylWkSXRiXt28pXlbg5LHHgMz5Fh44BwdSB3RnD/lFqLWw+0w0XfvTjqEcqkn0x3nb9UKN/LJfh+QJGEv6wfjg2X+zlLuLVmFgRurWeHk3dDS1Y8SN4jdcondXmRP+KHKrwx5v/18LDYSHMWjO0Y="
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: false     # default: false


# Disables Travis CI's Ruby-specific defaults.
language: c


env:
  global:
    - STATUS=1
    # STATUS_URL
    - secure: "OGj4ljDpWyvhS8pBDJxFt5Xm7J+dX6tOJpMvQRBb2Q+2QPAniHwNCbQbJj02vTFR5eGAzmgFuv8ovKdPtOwSgKVeS0cxr3PCGBdV8GGEq1LjAP96YQshYIvW5najvwuhcE0jM4MujIiYxa+X+ftjcBstsN1h3ItskrvyZv5/4BM="


matrix:
#  allow_failures:               # Enable to disregard ARM build failures
#  - env: OS=armel               # Enable to disregard ARMel build failures
#  - env: OS=armhf               # Enable to disregard ARMhf build failures

  include:

  ### ARMel ############################################################
  - os: linux
    dist: trusty
    sudo: required
    env: OS=armel
    script:                                          # Run ARMv5el tests
    - >
      docker run -v ${PWD}:/red
      -w /red/quick-test/runnable/arm-tests/red/
      --entrypoint /red/quick-test/runnable/arm-tests/red/run-all.sh
      balenalib/armv5e-debian:latest
    - >
      travis_wait 15 docker run -v ${PWD}:/red
      -e LD_LIBRARY_PATH='$LD_LIBRARY_PATH:/red/quick-test/runnable/arm-tests/system/'
      -w /red/quick-test/runnable/arm-tests/system/
      --entrypoint /red/quick-test/runnable/arm-tests/system/run-all.sh
      balenalib/armv5e-debian:latest


  ### ARMhf ############################################################
  - os: linux
    dist: trusty
    sudo: required
    env: OS=armhf
    script:                                          # Run ARMv7hf tests
    - >
      docker run -v ${PWD}:/red
      -w /red/quick-test/runnable/arm-tests/red/
      --entrypoint /red/quick-test/runnable/arm-tests/red/run-all.sh
      balenalib/raspberry-pi2-debian:latest
    - >
      travis_wait 15 docker run -v ${PWD}:/red
      -e LD_LIBRARY_PATH='$LD_LIBRARY_PATH:/red/quick-test/runnable/arm-tests/system/'
      -w /red/quick-test/runnable/arm-tests/system/
      --entrypoint /red/quick-test/runnable/arm-tests/system/run-all.sh
      balenalib/raspberry-pi2-debian:latest


###### all ##############################################################
install:
  # ARMel: build tests on i386
  - >
    if [[ ${OS} == "armel" ]]; then
    docker run -v ${PWD}:/red -w /red
    i386/debian:red rebol -qws tests/build-arm-tests.r '-t Linux-ARM' &&
    docker run -v ${PWD}:/red -w /red
    i386/debian:red rebol -qws system/tests/build-arm-tests.r '-t Linux-ARM' &&
    docker pull balenalib/armv5e-debian:latest ;
    fi
  # ARMhf: build tests on i386
  - >
    if [[ ${OS} == "armhf" ]]; then
    docker run -v ${PWD}:/red -w /red
    i386/debian:red rebol -qws tests/build-arm-tests.r '-t RPi' &&
    docker run -v ${PWD}:/red -w /red
    i386/debian:red rebol -qws system/tests/build-arm-tests.r '-t RPi' &&
    docker pull balenalib/raspberry-pi2-debian:latest ;
    fi

# If tests fail, change status code and save test logs into Travis logs
after_failure:
  - >
    STATUS=0 ;
    if [[ ${OS} == "armel" ]] || [[ ${OS} == "armhf" ]]; then
    cat quick-test/runnable/arm-tests/red/quick-test.log ;
    printf '\n\n\n\n' ;
    cat quick-test/runnable/arm-tests/system/quick-test.log ;
    else
    cat quick-test/quick-test-red.log ;
    printf '\n\n\n\n' ;
    cat quick-test/quick-test.log ;
    fi


# Notify build status
after_script:
  - curl ${STATUS_URL}/${OS}/${STATUS}
